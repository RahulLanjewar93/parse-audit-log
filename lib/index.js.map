{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference types=\"parse\" />\nimport { JSONSchema } from \"./server\";\nimport { AuditLoggerOptions, AuditObjectSaveOptions } from \"./types\";\n\nconst defaultOptions: AuditLoggerOptions = {\n  prefix: \"AUDIT_\",\n  postfix: undefined,\n  parseClient: Parse,\n  allowClientClassCreation: true,\n  useMasterKey: false,\n  captureState: false,\n}\n\nconst defaultClassLevelPermissions: JSONSchema['classLevelPermissions'] = {\n  get: {\n    '*': true,\n  },\n  find: {\n    '*': true,\n  },\n  create: {\n    '*': true,\n  },\n  update: {\n    '*': true,\n  },\n  delete: {\n    '*': true,\n  },\n  protectedFields: {},\n};\n\nconst defaultFields: JSONSchema['fields'] = {\n  user: {\n    type: 'Pointer',\n    targetClass: '_User',\n  },\n  targetId: {\n    type: 'String',\n  },\n  targetAction: {\n    type: 'String',\n  },\n  previousState: {\n    type: 'Object'\n  },\n  currentState: {\n    type: 'Object'\n  },\n  master: {\n    type: 'Boolean'\n  }\n}\n\nexport default class AuditLogger {\n  private options: AuditLoggerOptions;\n\n  constructor(options: AuditLoggerOptions) {\n    this.options = Object.assign({}, options, defaultOptions);\n    this.validateOptions();\n  }\n\n  private validateOptions() {\n    // If allowClientClassCreation is not false, then either masterKey or schemas must be provided. \n    if (!this.options.allowClientClassCreation && !this.options.useMasterKey) {\n      throw new Error(\"When allowClientClassCreation is false, either masterKey must be provided.\");\n    }\n  }\n\n  getAuditSchemas(classNames: string[]): JSONSchema[] {\n    const result: JSONSchema[] = classNames.map(className => {\n      return {\n        className: `${this.options.prefix ?? ''}${className}${this.options.postfix ?? ''}`,\n        fields: defaultFields,\n        classLevelPermissions: defaultClassLevelPermissions,\n      }\n    })\n\n    return result;\n  }\n\n  async auditSaveRequest(req: any, auditObjectOptions?: AuditObjectSaveOptions) {\n    const auditClassName = `${this.options.prefix ?? ''}${req.object.className}${this.options.postfix ?? ''}`;\n    const action = req.original ? 'UPDATE' : 'CREATE';\n    const auditObject = new this.options.parseClient.Object(auditClassName);\n\n    // If extraData is provided, add that.\n    if (auditObjectOptions?.extraData) {\n      auditObjectOptions.extraData.forEach((extraData) => {\n        auditObject.set(extraData.fieldName, extraData.fieldValue);\n      })\n    }\n\n    auditObject.set('targetId', req.object.id);\n    auditObject.set('targetAction', action);\n    auditObject.set('user', req.user);\n    auditObject.set('master', req.master);\n    auditObject.set('previousState', req.original.attributes);\n    auditObject.set('currentState', req.object.attributes);\n\n\n    // Save the audit object.\n    await auditObject.save(null, { useMasterKey: this.options.useMasterKey });\n  }\n\n  async auditDeleteRequest() {\n\n  }\n\n  async auditFindRequest() {\n\n  }\n}"]}