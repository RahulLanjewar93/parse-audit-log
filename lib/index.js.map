{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAGA,MAAM,cAAc,GAAuB;IACvC,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,KAAK;IAClB,wBAAwB,EAAE,IAAI;IAC9B,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,KAAK;CACtB,CAAA;AAED,MAAqB,WAAW;IAG5B,YAAY,OAA2B;QACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,EAAE,CAAA;IAC1B,CAAC;IAEO,eAAe;QAEnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YACtE,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;SACjG;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,GAAQ,EAAE,kBAA2C;QACxE,MAAM,cAAc,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,CAAA;QACzG,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;QAClD,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAExE,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI;YACjB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;YACtB,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;gBACT,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,IAAI,CACT,CAAC;QAGN,IAAI,kBAAkB,EAAE,SAAS,EAAE;YAC/B,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBAC/C,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAA;SACL;QAED,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC3C,WAAW,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;QACvC,WAAW,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC1D,WAAW,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAIvD,MAAM,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,kBAAkB;IAExB,CAAC;IAED,KAAK,CAAC,gBAAgB;IAEtB,CAAC;CACJ;AApDD,8BAoDC","sourcesContent":["/// <reference types=\"parse\" />\nimport { AuditLoggerOptions, AuditObjectSaveOptions } from \"./types\";\n\nconst defaultOptions: AuditLoggerOptions = {\n    prefix: \"AUDIT_\",\n    postfix: undefined,\n    parseClient: Parse,\n    allowClientClassCreation: true,\n    useMasterKey: false,\n    captureState: false,\n}\n\nexport default class AuditLogger {\n    private options: AuditLoggerOptions;\n\n    constructor(options: AuditLoggerOptions) {\n        this.options = Object.assign({}, options, defaultOptions);\n        this.validateOptions()\n    }\n\n    private validateOptions() {\n        // If allowClientClassCreation is not false, then either masterKey or schemas must be provided. \n        if (!this.options.allowClientClassCreation && !this.options.useMasterKey) {\n            throw new Error(\"When allowClientClassCreation is false, either masterKey must be provided.\");\n        }\n    }\n\n    async auditSaveRequest(req: any, auditObjectOptions?: AuditObjectSaveOptions) {\n        const auditClassName = `${this.options.prefix ?? ''}${req.object.className}${this.options.postfix ?? ''}`\n        const action = req.original ? 'UPDATE' : 'CREATE';\n        const auditObject = new this.options.parseClient.Object(auditClassName);\n\n        const user = req.user\n            ? req.user.toPointer()\n            : (req.master\n                ? 'master'\n                : null\n            );\n\n        // If extraData is provided, add that.\n        if (auditObjectOptions?.extraData) {\n            auditObjectOptions.extraData.forEach((extraData) => {\n                auditObject.set(extraData.fieldName, extraData.fieldValue);\n            })\n        }\n\n        auditObject.set('user', user);\n        auditObject.set('targetId', req.object.id);\n        auditObject.set('targetAction', action)\n        auditObject.set('previousState', req.original.attributes);\n        auditObject.set('currentState', req.object.attributes);\n\n\n        // Save the audit object.\n        await auditObject.save(null, { useMasterKey: this.options.useMasterKey });\n    }\n\n    async auditDeleteRequest() {\n\n    }\n\n    async auditFindRequest() {\n\n    }\n}"]}